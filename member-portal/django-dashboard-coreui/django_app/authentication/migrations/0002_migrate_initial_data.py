# Generated by Django 2.1.15 on 2020-08-17 19:59

from datetime import datetime
import pytz

from django.db import migrations
from django.contrib.contenttypes.management import create_contenttypes


def add_initial_data(apps, schema_editor):
    chapter = apps.get_model("authentication", "chapter")
    Group = apps.get_model("auth", "group")
    Permission = apps.get_model("auth", "permission")
    ContentType = apps.get_model('contenttypes', 'ContentType')

    # Make sure contenttypes are updated
    app_config = apps.get_app_config('authentication')
    app_config.models_module = app_config.models_module or True
    create_contenttypes(app_config)

    chapter.objects.bulk_create(
        [
            chapter(
                location='ASRG-S',
                city='Stuttgart',
                country='Germany',
                lead='Sven Schran',
                foundation=datetime(2018, 7, 18, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-D',
                city='Detroit',
                country='USA',
                lead='Brandon Barry',
                foundation=datetime(2018, 5, 2, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-TLV',
                city='Tel Aviv',
                country='Israel',
                lead='Eli Ben Ami',
                foundation=datetime(2019, 2, 28, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-C',
                city='Cluj-Napoca',
                country='Romania',
                lead='Dan Paunescu',
                foundation=datetime(2019, 4, 10, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-SIN',
                city='Singapore',
                country='Singapore',
                lead='Alina Tan',
                foundation=datetime(2019, 8, 12, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-MUC',
                city='Munich',
                country='Germany',
                lead='Jana von Wedel',
                foundation=datetime(2019, 11, 4, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-CAI',
                city='Cairo',
                country='Egypt',
                lead='Mohamed Madbouly',
                foundation=datetime(2019, 11, 10, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-SHA',
                city='Shanghai',
                country='China',
                lead='',
                foundation=datetime(2020, 1, 4, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-BER',
                city='Berlin',
                country='Germany',
                lead='Christian Schmidt-Janssen',
                foundation=datetime(2020, 1, 6, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-PIT',
                city='Pittsburgh',
                country='USA',
                lead='Shalabh Jain',
                foundation=datetime(2020, 1, 26, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-SFO',
                city='San Francisco',
                country='USA',
                lead='',
                foundation=datetime(2020, 1, 27, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-FRA',
                city='Darmstadt',
                country='Germany',
                lead='Patric Lenhart',
                foundation=datetime(2020, 2, 20, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-JPN',
                city='Tokyo',
                country='Japan',
                lead='M. Kamel Ghali',
                foundation=datetime(2020, 2, 15, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-OXF',
                city='Oxford',
                country='UK',
                lead='Erica Yang',
                foundation=datetime(2020, 2, 20, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-SYD',
                city='Sydney',
                country='Australia',
                lead='Jasmine Rhyder',
                foundation=datetime(2020, 3, 11, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-IASI',
                city='Iasi',
                country='Romania',
                lead='Irina-Georgiana Oancea',
                foundation=datetime(2020, 3, 16, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-DNCR',
                city='Delhi',
                country='India',
                lead='Shaurya Singh',
                foundation=datetime(2020, 3, 31, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-DAY',
                city='Dayton',
                country='USA',
                lead='Bryan Fite',
                foundation=datetime(2020, 4, 9, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-REC',
                city='Recife',
                country='Brasil',
                lead='Divanilson Campelo',
                foundation=datetime(2020, 4, 9, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-BLR',
                city='Bangalore',
                country='India',
                lead='Koushik Pal',
                foundation=datetime(2020, 4, 10, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-LAX',
                city='Los Angeles',
                country='USA',
                lead='Kyle Crockett',
                foundation=datetime(2020, 4, 16, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-BUC',
                city='Bucharest',
                country='Romania',
                lead='Anas Ahammed K A',
                foundation=datetime(2020, 7, 21, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-QRO',
                city='Querétaro',
                country='Mexico',
                lead='Alonso Jáuregui Martínez',
                foundation=datetime(2020, 6, 29, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-CGN',
                city='Cologne',
                country='Germany',
                lead='Stefan Würth',
                foundation=datetime(2020, 6, 29, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-TOR',
                city='Toronto',
                country='Canada',
                lead='AJ Khan',
                foundation=datetime(2020, 7, 1, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-WIN',
                city='Windsor',
                country='Canada',
                lead='Ikjot Saini',
                foundation=datetime(2020, 7, 1, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-KER',
                city='Kochi',
                country='India',
                lead='Anas Ahammed K A',
                foundation=datetime(2020, 7, 21, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-VIE',
                city='Vienna',
                country='Austria',
                lead='Martin Schmiedecker',
                foundation=datetime(2020, 7, 27, 0, 0, 0, 0, pytz.UTC),
            ),
            chapter(
                location='ASRG-HYD',
                city='Hyderabad',
                country='India',
                lead='Shravan Paidipala',
                foundation=datetime(2020, 7, 27, 0, 0, 0, 0, pytz.UTC),
            ),
        ]
    )
    ct = ContentType.objects.get(app_label='authentication', model='chapter')
    for chp in chapter.objects.all():
        location = chp.location

        # Create permissions needed for the new chapter
        asrg_perm, _ = Permission.objects.get_or_create(codename=location, name=location, content_type=ct)
        local_lead_perm, _ = Permission.objects.get_or_create(
            codename=f'local-lead-{location}', name=f'Local lead {location}', content_type=ct
        )

        # Add groups for the new chapters that will be used to granualarly add permissions
        asrg_goup, _ = Group.objects.get_or_create(name=location)
        asrg_goup.permissions.add(asrg_perm)
        local_lead_group, _ = Group.objects.get_or_create(name=f'local-lead-{location}')
        local_lead_group.permissions.add(local_lead_perm)


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0001_initial'),
        ('authentication', '0001_initial'),
    ]
    operations = [
        migrations.RunPython(add_initial_data),
    ]
