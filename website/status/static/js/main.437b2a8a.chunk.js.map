{"version":3,"sources":["logo.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","src","Logo","alt","MapContainer","markers","position","text","Map","center","zoom","TileLayer","url","attribution","map","m","i","Marker","key","Popup","Widget","total","title","decimal","end","duration","Footer","link","icon","href","Icon","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,yOCuB3C,IAAMC,EAAM,WACV,OACE,yBAAKC,UAAU,iGACb,yBAAKA,UAAU,iFACb,yBAEEC,IAAKC,IACLF,UAAU,YACVG,IAAI,iBAORC,EAAe,WACnB,IAEMC,EAAU,CACd,CACEC,SAAU,CAAC,QAAS,KACpBC,KACE,6BACE,yBAAKP,UAAU,mCAAf,eACA,6BAFF,oBAIE,6BAJF,gBAME,6BANF,oBAQE,6BARF,wBAUE,6BAVF,6BAYE,6BAZF,YAmBN,OACE,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,4CAAf,kBAIA,kBAACQ,EAAA,EAAD,CAAKC,OAhCM,CAAC,QAAS,KAgCEC,KAAM,IAC3B,kBAACC,EAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,2EAEbR,EAAQS,KAAI,SAACC,EAAGC,GAAJ,OACX,kBAACC,EAAA,EAAD,CAAQC,IAAK,UAAYF,EAAGV,SAAUS,EAAET,UACtC,kBAACa,EAAA,EAAD,KAAQJ,EAAER,cASlBa,EAAS,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACvB,OACE,yBAAKtB,UAAU,4BACb,yBAAKA,UAAU,qEACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,wCACb,kBAAC,IAAD,CAASuB,QAAQ,IAAIC,IAAKH,EAAOI,SAAU,KAE7C,uBAAGzB,UAAU,2BAA2BsB,OAO5CI,EAAS,WACb,OACE,4BAAQ1B,UAAU,iFAChB,yBAAKA,UAAU,8DACb,yBAAKA,UAAU,sEACb,yBAAKA,UAAU,kDACb,kBAAC,EAAD,CACE2B,KAAK,0JACLC,KAAK,UAEP,kBAAC,EAAD,CAAMD,KAAK,sCAAsCC,KAAK,YACtD,kBAAC,EAAD,CACED,KAAK,iFACLC,KAAK,aAEP,kBAAC,EAAD,CACED,KAAK,uEACLC,KAAK,aAEP,kBAAC,EAAD,CAAMD,KAAK,uBAAuBC,KAAK,eAG3C,yBAAK5B,UAAU,wEACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gEACb,uBAAG6B,KAAK,oBACN,yBAAK7B,UAAU,gIAAf,SAIF,uBAAG6B,KAAK,8BACN,yBAAK7B,UAAU,gIAAf,UAIF,uBAAG6B,KAAK,gCACN,yBAAK7B,UAAU,gIAAf,iBAKF,uBAAG6B,KAAK,gCACN,yBAAK7B,UAAU,gIAAf,kBAYV8B,EAAO,SAAC,GAAD,IAAGH,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACX,uBAAGC,KAAMF,GACP,uBACE3B,UACE,6GACA4B,MAMOG,EAhKf,WACE,OACE,yBAAK/B,UAAU,wBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,8DACb,kBAAC,EAAD,CAAQqB,MAAO,KAAMC,MAAM,YAC3B,kBAAC,EAAD,CAAQD,MAAO,EAAGC,MAAM,cACxB,kBAAC,EAAD,CAAQD,MAAO,GAAIC,MAAM,aACzB,kBAAC,EAAD,CAAQD,MAAO,IAAKC,MAAM,eAE5B,kBAAC,EAAD,MACA,kBAAC,EAAD,QCNcU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.437b2a8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0758dab5.png\";","import React from \"react\";\nimport \"./App.scss\";\nimport \"./main.css\";\nimport CountUp from \"react-countup\";\nimport Logo from \"./logo.png\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\n\nfunction App() {\n  return (\n    <div className=\"flex w-full flex-col\">\n      <Nav />\n      <div className=\"flex w-full flex-col justify-between lg:flex-row px-3 py-6\">\n        <Widget total={2472} title=\"Members\" />\n        <Widget total={7} title=\"Locations\" />\n        <Widget total={46} title=\"Meetings\" />\n        <Widget total={2.5} title=\"Years Old\" />\n      </div>\n      <MapContainer />\n      <Footer />\n    </div>\n  );\n}\n\nconst Nav = () => {\n  return (\n    <nav className=\"bg-darkBlue2 w-full py-4 flex items-center md:justify-between justify-center flex-wrap shadow\">\n      <div className=\"flex w-full justify-center items-center flex-shrink-0 text-gray-600 ml-4 m3-6\">\n        <img\n          // src=\"https://asrg.io/images/ASRG_Logo_white.png\"\n          src={Logo}\n          className=\"logo mr-3\"\n          alt=\"ASRG Logo\"\n        />\n      </div>\n    </nav>\n  );\n};\n\nconst MapContainer = () => {\n  const position = [51.505, -0.09]; // start position\n  // the markers will be loaded dynamically once we have set up the JSON\n  const markers = [\n    {\n      position: [51.505, -0.09],\n      text: (\n        <div>\n          <div className=\"font-bold text-sm text-blueGray\">ASRG London</div>\n          <br />\n          Created: ........\n          <br />\n          Members: 1000\n          <br />\n          Past Events: 1000\n          <br />\n          Upcoming Events: 1000\n          <br />\n          Last Event Date: .........\n          <br />\n          Active\n        </div>\n      )\n    }\n  ];\n\n  return (\n    <div className=\"w-full px-6 py-3 flex justify-center\">\n      <div className=\"bg-darkBlue2 border w-full rounded\">\n        <div className=\"font-bold text-xl text-gray-200 mb-2 p-6\">\n          ASRG Locations\n        </div>\n\n        <Map center={position} zoom={13}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          {markers.map((m, i) => (\n            <Marker key={\"marker-\" + i} position={m.position}>\n              <Popup>{m.text}</Popup>\n            </Marker>\n          ))}\n        </Map>\n      </div>\n    </div>\n  );\n};\n\nconst Widget = ({ total, title }) => {\n  return (\n    <div className=\"px-2 w-full py-2 lg:py-0\">\n      <div className=\"w-full bg-darkBlue2 px-3 lg:w-full rounded overflow-hidden border\">\n        <div className=\" px-6 py-4\">\n          <div className=\"font-bold text-xl text-gray-300 mb-2\">\n            <CountUp decimal=\",\" end={total} duration={2} />\n          </div>\n          <p className=\"text-gray-400 text-base\">{title}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Footer = () => {\n  return (\n    <footer className=\"flex justify-center w-full bg-darkBlue1 border-t-2 border-darkBlue2 p-6 mt-10\">\n      <div className=\"w-full lg:w-6/12 flex flex-col items-center justify-center\">\n        <div className=\"flex justify-center flex-col w-6/12 sm:w-5/12 md:w-5/12 lg:w-3/12 \">\n          <div className=\"flex w-full flex-row flex-wrap justify-between\">\n            <Icon\n              link=\"https://join.slack.com/t/asrg/shared_invite/enQtNjMyMzAyMDM4MjI1LTM2Njc3MWRkNWI1NjkwYmQ4NDRkZjYwYmE2MzcyMWY3Y2IwZjc1YTAzYjQxM2M0NzdhOGEzNjNmYjNkM2EzZWM\"\n              icon=\"slack\"\n            />\n            <Icon link=\"https://twitter.com/AutoSecResGroup\" icon=\"twitter\" />\n            <Icon\n              link=\"https://facebook.com/ASRG-Automotive-Security-Research-Group-1454803571254832/\"\n              icon=\"facebook\"\n            />\n            <Icon\n              link=\"https://www.linkedin.com/company/automotive-security-research-group/\"\n              icon=\"linkedin\"\n            />\n            <Icon link=\"mailto:hello@asrg.io\" icon=\"envelope\" />\n          </div>\n        </div>\n        <div className=\"flex w-full sm:w-full  md:w-full lg:w-10/12 xl:w-8/12 justify-center\">\n          <div className=\"flex w-full m-6\">\n            <div className=\"flex w-full flex-col md:flex-row items-center justify-center\">\n              <a href=\"https://asrg.io/\">\n                <div className=\"px-3 py-1 md:py-0 transition-all duration-300 uppercase ease-in-out text-lg cursor-pointer text-gray-300 hover:text-gray-500\">\n                  home\n                </div>\n              </a>\n              <a href=\"https://asrg.io/about.html\">\n                <div className=\"px-3 py-1 md:py-0 transition-all duration-300 uppercase ease-in-out text-lg cursor-pointer text-gray-300 hover:text-gray-500\">\n                  about\n                </div>\n              </a>\n              <a href=\"https://asrg.io/privacy.html\">\n                <div className=\"px-3 py-1 md:py-0 transition-all duration-300 uppercase ease-in-out text-lg cursor-pointer text-gray-300 hover:text-gray-500\">\n                  data privacy\n                </div>\n              </a>\n\n              <a href=\"https://asrg.io/imprint.html\">\n                <div className=\"px-3 py-1 md:py-0 transition-all duration-300 uppercase ease-in-out text-lg cursor-pointer text-gray-300 hover:text-gray-500\">\n                  imprint\n                </div>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nconst Icon = ({ link, icon }) => (\n  <a href={link}>\n    <i\n      className={\n        \"text-xl transition-colors duration-300 ease-in-out cursor-pointer text-gray-300 hover:text-gray-500 fa fa-\" +\n        icon\n      }\n    ></i>\n  </a>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}